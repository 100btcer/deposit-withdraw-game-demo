{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proofs",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGiveOutAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setGiveOutAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "sysTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a33610031565b600380546001600160a01b03191633179055610081565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610971806100906000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638c6e2e77116100665780638c6e2e77146101025780638da5cb5b14610127578063b3f48f4914610138578063d12acf731461014b578063f2fde38b1461018f57600080fd5b8063172bd6de146100a35780632eb4a7ab146100b8578063715018a6146100d45780637610fbe7146100dc5780637cb64759146100ef575b600080fd5b6100b66100b13660046107a2565b6101a2565b005b6100c160015481565b6040519081526020015b60405180910390f35b6100b66103d4565b6100b66100ea366004610839565b6103e8565b6100b66100fd366004610854565b610412565b6003546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b6000546001600160a01b031661010f565b6100b661014636600461086d565b61041f565b61017f6101593660046108a0565b600260209081526000938452604080852082529284528284209052825290205460ff1681565b60405190151581526020016100cb565b6100b661019d366004610839565b6105ce565b3360009081526002602090815260408083206001600160a01b0389168452825280832086845290915290205460ff16156102165760405162461bcd60e51b815260206004820152601060248201526f416c726561647920636c61696d65642160801b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff1933606090811b8216602084015287901b16603482015260488101859052606881018490526000906088016040516020818303038152906040528051906020012090506102aa838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610647565b6102eb5760405162461bcd60e51b815260206004820152601260248201527156616c69646174696f6e206661696c65642160701b604482015260640161020d565b3360008181526002602090815260408083206001600160a01b038b1680855290835281842089855290925291829020805460ff19166001179055905163a9059cbb60e01b81526004810192909252602482018790529063a9059cbb906044016020604051808303816000875af1158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d91906108dc565b6103cc5760405162461bcd60e51b815260206004820152601060248201526f5472616e73666572206661696c65642160801b604482015260640161020d565b505050505050565b6103dc61065d565b6103e660006106b7565b565b6103f061065d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61041a61065d565b600155565b6003546001600160a01b031633146104795760405162461bcd60e51b815260206004820152601760248201527f466976654f75744164647265737320696e76616c696421000000000000000000604482015260640161020d565b3360009081526002602090815260408083206001600160a01b0387168452825280832084845290915290205460ff16156104e85760405162461bcd60e51b815260206004820152601060248201526f416c726561647920636c61696d65642160801b604482015260640161020d565b3360008181526002602090815260408083206001600160a01b03881680855290835281842086855290925291829020805460ff19166001179055905163a9059cbb60e01b81526004810192909252602482018490529063a9059cbb906044016020604051808303816000875af1158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a91906108dc565b6105c95760405162461bcd60e51b815260206004820152601060248201526f5472616e73666572206661696c65642160801b604482015260640161020d565b505050565b6105d661065d565b6001600160a01b03811661063b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020d565b610644816106b7565b50565b6000826106548584610707565b14949350505050565b6000546001600160a01b031633146103e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b845181101561074c576107388286838151811061072b5761072b6108fe565b6020026020010151610754565b91508061074481610914565b91505061070c565b509392505050565b600081831061077057600082815260208490526040902061077f565b60008381526020839052604090205b9392505050565b80356001600160a01b038116811461079d57600080fd5b919050565b6000806000806000608086880312156107ba57600080fd5b6107c386610786565b94506020860135935060408601359250606086013567ffffffffffffffff808211156107ee57600080fd5b818801915088601f83011261080257600080fd5b81358181111561081157600080fd5b8960208260051b850101111561082657600080fd5b9699959850939650602001949392505050565b60006020828403121561084b57600080fd5b61077f82610786565b60006020828403121561086657600080fd5b5035919050565b60008060006060848603121561088257600080fd5b61088b84610786565b95602085013595506040909401359392505050565b6000806000606084860312156108b557600080fd5b6108be84610786565b92506108cc60208501610786565b9150604084013590509250925092565b6000602082840312156108ee57600080fd5b8151801515811461077f57600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161093457634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212203e231df2a91fa0445b37d7ddda3c0574cd2351ce02f5e407849955df0939b30f64736f6c63430008140033",
    "sourceMap": "450:1885:8:-:0;;;804:58;;;;;;;;;-1:-1:-1;936:32:0;719:10:4;936:18:0;:32::i;:::-;828:14:8;:27;;-1:-1:-1;;;;;;828:27:8;845:10;828:27;;;450:1885;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;450:1885:8:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638c6e2e77116100665780638c6e2e77146101025780638da5cb5b14610127578063b3f48f4914610138578063d12acf731461014b578063f2fde38b1461018f57600080fd5b8063172bd6de146100a35780632eb4a7ab146100b8578063715018a6146100d45780637610fbe7146100dc5780637cb64759146100ef575b600080fd5b6100b66100b13660046107a2565b6101a2565b005b6100c160015481565b6040519081526020015b60405180910390f35b6100b66103d4565b6100b66100ea366004610839565b6103e8565b6100b66100fd366004610854565b610412565b6003546001600160a01b03165b6040516001600160a01b0390911681526020016100cb565b6000546001600160a01b031661010f565b6100b661014636600461086d565b61041f565b61017f6101593660046108a0565b600260209081526000938452604080852082529284528284209052825290205460ff1681565b60405190151581526020016100cb565b6100b661019d366004610839565b6105ce565b3360009081526002602090815260408083206001600160a01b0389168452825280832086845290915290205460ff16156102165760405162461bcd60e51b815260206004820152601060248201526f416c726561647920636c61696d65642160801b60448201526064015b60405180910390fd5b6040516bffffffffffffffffffffffff1933606090811b8216602084015287901b16603482015260488101859052606881018490526000906088016040516020818303038152906040528051906020012090506102aa838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506001549150849050610647565b6102eb5760405162461bcd60e51b815260206004820152601260248201527156616c69646174696f6e206661696c65642160701b604482015260640161020d565b3360008181526002602090815260408083206001600160a01b038b1680855290835281842089855290925291829020805460ff19166001179055905163a9059cbb60e01b81526004810192909252602482018790529063a9059cbb906044016020604051808303816000875af1158015610369573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038d91906108dc565b6103cc5760405162461bcd60e51b815260206004820152601060248201526f5472616e73666572206661696c65642160801b604482015260640161020d565b505050505050565b6103dc61065d565b6103e660006106b7565b565b6103f061065d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b61041a61065d565b600155565b6003546001600160a01b031633146104795760405162461bcd60e51b815260206004820152601760248201527f466976654f75744164647265737320696e76616c696421000000000000000000604482015260640161020d565b3360009081526002602090815260408083206001600160a01b0387168452825280832084845290915290205460ff16156104e85760405162461bcd60e51b815260206004820152601060248201526f416c726561647920636c61696d65642160801b604482015260640161020d565b3360008181526002602090815260408083206001600160a01b03881680855290835281842086855290925291829020805460ff19166001179055905163a9059cbb60e01b81526004810192909252602482018490529063a9059cbb906044016020604051808303816000875af1158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058a91906108dc565b6105c95760405162461bcd60e51b815260206004820152601060248201526f5472616e73666572206661696c65642160801b604482015260640161020d565b505050565b6105d661065d565b6001600160a01b03811661063b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161020d565b610644816106b7565b50565b6000826106548584610707565b14949350505050565b6000546001600160a01b031633146103e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161020d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081815b845181101561074c576107388286838151811061072b5761072b6108fe565b6020026020010151610754565b91508061074481610914565b91505061070c565b509392505050565b600081831061077057600082815260208490526040902061077f565b60008381526020839052604090205b9392505050565b80356001600160a01b038116811461079d57600080fd5b919050565b6000806000806000608086880312156107ba57600080fd5b6107c386610786565b94506020860135935060408601359250606086013567ffffffffffffffff808211156107ee57600080fd5b818801915088601f83011261080257600080fd5b81358181111561081157600080fd5b8960208260051b850101111561082657600080fd5b9699959850939650602001949392505050565b60006020828403121561084b57600080fd5b61077f82610786565b60006020828403121561086657600080fd5b5035919050565b60008060006060848603121561088257600080fd5b61088b84610786565b95602085013595506040909401359392505050565b6000806000606084860312156108b557600080fd5b6108be84610786565b92506108cc60208501610786565b9150604084013590509250925092565b6000602082840312156108ee57600080fd5b8151801515811461077f57600080fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161093457634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212203e231df2a91fa0445b37d7ddda3c0574cd2351ce02f5e407849955df0939b30f64736f6c63430008140033",
    "sourceMap": "450:1885:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1180:524;;;;;;:::i;:::-;;:::i;:::-;;537:25;;;;;;;;;1169::10;;;1157:2;1142:18;537:25:8;;;;;;;;1824:101:0;;;:::i;2108:98:8:-;;;;;;:::i;:::-;;:::i;1050:102::-;;;;;;:::i;:::-;;:::i;2237:96::-;2312:14;;-1:-1:-1;;;;;2312:14:8;2237:96;;;-1:-1:-1;;;;;1745:32:10;;;1727:51;;1715:2;1700:18;2237:96:8;1581:203:10;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1729:348:8;;;;;;:::i;:::-;;:::i;588:81::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:14:10;;2607:22;2589:41;;2577:2;2562:18;588:81:8;2449:187:10;2074:198:0;;;;;;:::i;:::-;;:::i;1180:524:8:-;1302:10;1292:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1292:29:8;;;;;;;;;:34;;;;;;;;;;;:43;1284:71;;;;-1:-1:-1;;;1284:71:8;;2843:2:10;1284:71:8;;;2825:21:10;2882:2;2862:18;;;2855:30;-1:-1:-1;;;2901:18:10;;;2894:46;2957:18;;1284:71:8;;;;;;;;;1392:48;;-1:-1:-1;;1409:10:8;3269:2:10;3265:15;;;3261:24;;1392:48:8;;;3249:37:10;3320:15;;;3316:24;3302:12;;;3295:46;3357:12;;;3350:28;;;3394:12;;;3387:28;;;1366:13:8;;3431::10;;1392:48:8;;;;;;;;;;;;1382:59;;;;;;1366:75;;1459:46;1478:7;;1459:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1487:10:8;;;-1:-1:-1;1499:5:8;;-1:-1:-1;1459:18:8;:46::i;:::-;1451:77;;;;-1:-1:-1;;;1451:77:8;;3657:2:10;1451:77:8;;;3639:21:10;3696:2;3676:18;;;3669:30;-1:-1:-1;;;3715:18:10;;;3708:48;3773:18;;1451:77:8;3455:342:10;1451:77:8;1549:10;1539:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1539:29:8;;;;;;;;;;;:34;;;;;;;;;;:41;;-1:-1:-1;;1539:41:8;1576:4;1539:41;;;1611:44;;-1:-1:-1;;;1611:44:8;;;;;3976:51:10;;;;4043:18;;;4036:34;;;1539:29:8;1611:23;;3949:18:10;;1611:44:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:107;;;;-1:-1:-1;;;1590:107:8;;4565:2:10;1590:107:8;;;4547:21:10;4604:2;4584:18;;;4577:30;-1:-1:-1;;;4623:18:10;;;4616:46;4679:18;;1590:107:8;4363:340:10;1590:107:8;1274:430;1180:524;;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2108:98:8:-;1094:13:0;:11;:13::i;:::-;2177:14:8::1;:22:::0;;-1:-1:-1;;;;;;2177:22:8::1;-1:-1:-1::0;;;;;2177:22:8;;;::::1;::::0;;;::::1;::::0;;2108:98::o;1050:102::-;1094:13:0;:11;:13::i;:::-;1121:10:8::1;:24:::0;1050:102::o;1729:348::-;956:14;;-1:-1:-1;;;;;956:14:8;942:10;:28;934:64;;;;-1:-1:-1;;;934:64:8;;4910:2:10;934:64:8;;;4892:21:10;4949:2;4929:18;;;4922:30;4988:25;4968:18;;;4961:53;5031:18;;934:64:8;4708:347:10;934:64:8;1849:10:::1;1839:21;::::0;;;:9:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;1839:29:8;::::1;::::0;;;;;;;:34;;;;;;;;;::::1;;:43;1831:71;;;::::0;-1:-1:-1;;;1831:71:8;;2843:2:10;1831:71:8::1;::::0;::::1;2825:21:10::0;2882:2;2862:18;;;2855:30;-1:-1:-1;;;2901:18:10;;;2894:46;2957:18;;1831:71:8::1;2641:340:10::0;1831:71:8::1;1922:10;1912:21;::::0;;;:9:::1;:21;::::0;;;;;;;-1:-1:-1;;;;;1912:29:8;::::1;::::0;;;;;;;;;:34;;;;;;;;;;:41;;-1:-1:-1;;1912:41:8::1;1949:4;1912:41;::::0;;1984:44;;-1:-1:-1;;;1984:44:8;;::::1;::::0;::::1;3976:51:10::0;;;;4043:18;;;4036:34;;;1912:29:8;1984:23:::1;::::0;3949:18:10;;1984:44:8::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1963:107;;;::::0;-1:-1:-1;;;1963:107:8;;4565:2:10;1963:107:8::1;::::0;::::1;4547:21:10::0;4604:2;4584:18;;;4577:30;-1:-1:-1;;;4623:18:10;;;4616:46;4679:18;;1963:107:8::1;4363:340:10::0;1963:107:8::1;1729:348:::0;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;5262:2:10;2154:73:0::1;::::0;::::1;5244:21:10::0;5301:2;5281:18;;;5274:30;5340:34;5320:18;;;5313:62;-1:-1:-1;;;5391:18:10;;;5384:36;5437:19;;2154:73:0::1;5060:402:10::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1156:154:5:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:5:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5669:2:10;1414:68:0;;;5651:21:10;;;5688:18;;;5681:30;5747:34;5727:18;;;5720:62;5799:18;;1414:68:0;5467:356:10;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1934:290:5:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:5;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:5;1934:290;-1:-1:-1;;;1934:290:5:o;9205:147::-;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9287:58;9205:147;-1:-1:-1;;;9205:147:5:o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:826::-;305:6;313;321;329;337;390:3;378:9;369:7;365:23;361:33;358:53;;;407:1;404;397:12;358:53;430:29;449:9;430:29;:::i;:::-;420:39;;506:2;495:9;491:18;478:32;468:42;;557:2;546:9;542:18;529:32;519:42;;612:2;601:9;597:18;584:32;635:18;676:2;668:6;665:14;662:34;;;692:1;689;682:12;662:34;730:6;719:9;715:22;705:32;;775:7;768:4;764:2;760:13;756:27;746:55;;797:1;794;787:12;746:55;837:2;824:16;863:2;855:6;852:14;849:34;;;879:1;876;869:12;849:34;932:7;927:2;917:6;914:1;910:14;906:2;902:23;898:32;895:45;892:65;;;953:1;950;943:12;892:65;192:826;;;;-1:-1:-1;192:826:10;;-1:-1:-1;984:2:10;976:11;;1006:6;192:826;-1:-1:-1;;;192:826:10:o;1205:186::-;1264:6;1317:2;1305:9;1296:7;1292:23;1288:32;1285:52;;;1333:1;1330;1323:12;1285:52;1356:29;1375:9;1356:29;:::i;1396:180::-;1455:6;1508:2;1496:9;1487:7;1483:23;1479:32;1476:52;;;1524:1;1521;1514:12;1476:52;-1:-1:-1;1547:23:10;;1396:180;-1:-1:-1;1396:180:10:o;1789:322::-;1866:6;1874;1882;1935:2;1923:9;1914:7;1910:23;1906:32;1903:52;;;1951:1;1948;1941:12;1903:52;1974:29;1993:9;1974:29;:::i;:::-;1964:39;2050:2;2035:18;;2022:32;;-1:-1:-1;2101:2:10;2086:18;;;2073:32;;1789:322;-1:-1:-1;;;1789:322:10:o;2116:328::-;2193:6;2201;2209;2262:2;2250:9;2241:7;2237:23;2233:32;2230:52;;;2278:1;2275;2268:12;2230:52;2301:29;2320:9;2301:29;:::i;:::-;2291:39;;2349:38;2383:2;2372:9;2368:18;2349:38;:::i;:::-;2339:48;;2434:2;2423:9;2419:18;2406:32;2396:42;;2116:328;;;;;:::o;4081:277::-;4148:6;4201:2;4189:9;4180:7;4176:23;4172:32;4169:52;;;4217:1;4214;4207:12;4169:52;4249:9;4243:16;4302:5;4295:13;4288:21;4281:5;4278:32;4268:60;;4324:1;4321;4314:12;5828:127;5889:10;5884:3;5880:20;5877:1;5870:31;5920:4;5917:1;5910:15;5944:4;5941:1;5934:15;5960:232;5999:3;6020:17;;;6017:140;;6079:10;6074:3;6070:20;6067:1;6060:31;6114:4;6111:1;6104:15;6142:4;6139:1;6132:15;6017:140;-1:-1:-1;6184:1:10;6173:13;;5960:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claim(address,uint256,uint256,bytes32[])": "172bd6de",
    "getGiveOutAddress()": "8c6e2e77",
    "isClaimed(address,address,uint256)": "d12acf73",
    "merkleRoot()": "2eb4a7ab",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setGiveOutAddress(address)": "7610fbe7",
    "setMerkleRoot(bytes32)": "7cb64759",
    "sysTransfer(address,uint256,uint256)": "b3f48f49",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proofs\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGiveOutAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setGiveOutAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"sysTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Reward.sol\":\"Reward\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":math/=lib/math/\",\":merkle/=lib/merkle/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3034589f1fe585d6fa7adf4fa81a081e128dcb58d21ee59094f396fcc0d3e813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4693d5113292e397a0bc1f4b32e9a9f82263829857cb302c7c1a9b4f34842ea7\",\"dweb:/ipfs/QmaQVvsmUWvmSZtkpZX2tV3YnTsYkZg1PL8GQcD1wXN4CV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"src/Reward.sol\":{\"keccak256\":\"0xc1885246ca54203b081cf0d7f067a7af37fd5da2da2843b530ab04a61ab335e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d35738fb957f16267867681442e6d4ac192ea3ce1d500d70d9a19ae5496b1ddd\",\"dweb:/ipfs/QmTQbrJ2xaADe6vB48SwJwBdp1x8XcS57q2QWMC3rLEVdp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "_proofs",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGiveOutAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGiveOutAddress"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMerkleRoot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sysTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":math/=lib/math/",
        ":merkle/=lib/merkle/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Reward.sol": "Reward"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x3034589f1fe585d6fa7adf4fa81a081e128dcb58d21ee59094f396fcc0d3e813",
        "urls": [
          "bzz-raw://4693d5113292e397a0bc1f4b32e9a9f82263829857cb302c7c1a9b4f34842ea7",
          "dweb:/ipfs/QmaQVvsmUWvmSZtkpZX2tV3YnTsYkZg1PL8GQcD1wXN4CV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "src/Reward.sol": {
        "keccak256": "0xc1885246ca54203b081cf0d7f067a7af37fd5da2da2843b530ab04a61ab335e8",
        "urls": [
          "bzz-raw://d35738fb957f16267867681442e6d4ac192ea3ce1d500d70d9a19ae5496b1ddd",
          "dweb:/ipfs/QmTQbrJ2xaADe6vB48SwJwBdp1x8XcS57q2QWMC3rLEVdp"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Reward.sol",
    "id": 2763,
    "exportedSymbols": {
      "Context": [
        824
      ],
      "ERC20": [
        699
      ],
      "IERC20": [
        777
      ],
      "IERC20Metadata": [
        802
      ],
      "MerkleProof": [
        1352
      ],
      "Ownable": [
        112
      ],
      "Reward": [
        2762
      ],
      "SafeMath": [
        1664
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2304:8",
    "nodes": [
      {
        "id": 2564,
        "nodeType": "PragmaDirective",
        "src": "32:24:8",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 2565,
        "nodeType": "ImportDirective",
        "src": "58:61:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2763,
        "sourceUnit": 113,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2566,
        "nodeType": "ImportDirective",
        "src": "120:65:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2763,
        "sourceUnit": 778,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2567,
        "nodeType": "ImportDirective",
        "src": "186:64:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2763,
        "sourceUnit": 700,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2568,
        "nodeType": "ImportDirective",
        "src": "251:77:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2763,
        "sourceUnit": 1353,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2569,
        "nodeType": "ImportDirective",
        "src": "329:66:8",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2763,
        "sourceUnit": 1665,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2762,
        "nodeType": "ContractDefinition",
        "src": "450:1885:8",
        "nodes": [
          {
            "id": 2574,
            "nodeType": "UsingForDirective",
            "src": "485:24:8",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 2572,
              "name": "SafeMath",
              "nameLocations": [
                "491:8:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1664,
              "src": "491:8:8"
            },
            "typeName": {
              "id": 2573,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "504:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2576,
            "nodeType": "VariableDeclaration",
            "src": "537:25:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "552:10:8",
            "scope": 2762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 2575,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "537:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2584,
            "nodeType": "VariableDeclaration",
            "src": "588:81:8",
            "nodes": [],
            "constant": false,
            "functionSelector": "d12acf73",
            "mutability": "mutable",
            "name": "isClaimed",
            "nameLocation": "660:9:8",
            "scope": 2762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(uint256 => bool)))"
            },
            "typeName": {
              "id": 2583,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2577,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "596:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "588:64:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(uint256 => bool)))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 2582,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 2578,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "615:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "607:44:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                  "typeString": "mapping(address => mapping(uint256 => bool))"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 2581,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 2579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "626:24:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 2580,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 2586,
            "nodeType": "VariableDeclaration",
            "src": "767:30:8",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "giveOutAddress",
            "nameLocation": "783:14:8",
            "scope": 2762,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2585,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "767:7:8",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 2595,
            "nodeType": "FunctionDefinition",
            "src": "804:58:8",
            "nodes": [],
            "body": {
              "id": 2594,
              "nodeType": "Block",
              "src": "818:44:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2589,
                      "name": "giveOutAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2586,
                      "src": "828:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2590,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "845:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "849:6:8",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "845:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "828:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2593,
                  "nodeType": "ExpressionStatement",
                  "src": "828:27:8"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:2:8"
            },
            "returnParameters": {
              "id": 2588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:0:8"
            },
            "scope": 2762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2607,
            "nodeType": "ModifierDefinition",
            "src": "893:123:8",
            "nodes": [],
            "body": {
              "id": 2606,
              "nodeType": "Block",
              "src": "924:92:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2598,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "942:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "946:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "942:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2600,
                          "name": "giveOutAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2586,
                          "src": "956:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "942:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466976654f75744164647265737320696e76616c696421",
                        "id": 2602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "972:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dd0edf6e2bd9e83dfb32c22294b713fcbe34ce3e9059143c09a4c8904b29159",
                          "typeString": "literal_string \"FiveOutAddress invalid!\""
                        },
                        "value": "FiveOutAddress invalid!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dd0edf6e2bd9e83dfb32c22294b713fcbe34ce3e9059143c09a4c8904b29159",
                          "typeString": "literal_string \"FiveOutAddress invalid!\""
                        }
                      ],
                      "id": 2597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "934:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2604,
                  "nodeType": "ExpressionStatement",
                  "src": "934:64:8"
                },
                {
                  "id": 2605,
                  "nodeType": "PlaceholderStatement",
                  "src": "1008:1:8"
                }
              ]
            },
            "name": "checkGiveOutAddress",
            "nameLocation": "902:19:8",
            "parameters": {
              "id": 2596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:2:8"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2619,
            "nodeType": "FunctionDefinition",
            "src": "1050:102:8",
            "nodes": [],
            "body": {
              "id": 2618,
              "nodeType": "Block",
              "src": "1111:41:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2614,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2576,
                      "src": "1121:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2615,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2609,
                      "src": "1134:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1121:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2617,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:24:8"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2611,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1101:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1101:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1101:9:8"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "1059:13:8",
            "parameters": {
              "id": 2610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "1081:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2619,
                  "src": "1073:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:21:8"
            },
            "returnParameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:8"
            },
            "scope": 2762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2692,
            "nodeType": "FunctionDefinition",
            "src": "1180:524:8",
            "nodes": [],
            "body": {
              "id": 2691,
              "nodeType": "Block",
              "src": "1274:430:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2632,
                                "name": "isClaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2584,
                                "src": "1292:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint256 => bool)))"
                                }
                              },
                              "id": 2635,
                              "indexExpression": {
                                "expression": {
                                  "id": 2633,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1302:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1306:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1302:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1292:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 2637,
                            "indexExpression": {
                              "id": 2636,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2621,
                              "src": "1314:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1292:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2639,
                          "indexExpression": {
                            "id": 2638,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2625,
                            "src": "1322:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1292:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1330:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1292:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920636c61696d656421",
                        "id": 2642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1336:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b71a460a88560813dde520885f62fbdfb8f077fc6b93e7703d54cfd9ef8988e",
                          "typeString": "literal_string \"Already claimed!\""
                        },
                        "value": "Already claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b71a460a88560813dde520885f62fbdfb8f077fc6b93e7703d54cfd9ef8988e",
                          "typeString": "literal_string \"Already claimed!\""
                        }
                      ],
                      "id": 2631,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1284:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2644,
                  "nodeType": "ExpressionStatement",
                  "src": "1284:71:8"
                },
                {
                  "assignments": [
                    2646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2646,
                      "mutability": "mutable",
                      "name": "_node",
                      "nameLocation": "1374:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 2691,
                      "src": "1366:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2645,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1366:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2657,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2650,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1409:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1413:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1409:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2652,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2621,
                            "src": "1420:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2653,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2623,
                            "src": "1428:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2654,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2625,
                            "src": "1436:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2648,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1392:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1396:12:8",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1392:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1392:48:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2647,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1382:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1382:59:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1366:75:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2661,
                            "name": "_proofs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2628,
                            "src": "1478:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 2662,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2576,
                            "src": "1487:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 2663,
                            "name": "_node",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2646,
                            "src": "1499:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2659,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1352,
                            "src": "1459:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1352_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 2660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1471:6:8",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 848,
                          "src": "1459:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 2664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1459:46:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c69646174696f6e206661696c656421",
                        "id": 2665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1507:20:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_443f2f48de8715e353a92b29afa04f7f69df5c1ffffa80d047b659f8f389afb9",
                          "typeString": "literal_string \"Validation failed!\""
                        },
                        "value": "Validation failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_443f2f48de8715e353a92b29afa04f7f69df5c1ffffa80d047b659f8f389afb9",
                          "typeString": "literal_string \"Validation failed!\""
                        }
                      ],
                      "id": 2658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1451:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:77:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2667,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:77:8"
                },
                {
                  "expression": {
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2668,
                            "name": "isClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "1539:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => bool)))"
                            }
                          },
                          "id": 2673,
                          "indexExpression": {
                            "expression": {
                              "id": 2669,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1549:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1553:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1549:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1539:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 2674,
                        "indexExpression": {
                          "id": 2671,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2621,
                          "src": "1561:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1539:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2675,
                      "indexExpression": {
                        "id": 2672,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "1569:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1539:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1576:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1539:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2678,
                  "nodeType": "ExpressionStatement",
                  "src": "1539:41:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2684,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1635:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1639:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1635:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2686,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2623,
                            "src": "1647:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2681,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2621,
                                "src": "1618:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2680,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 777,
                              "src": "1611:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$777_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1611:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$777",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1626:8:8",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 744,
                          "src": "1611:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1611:44:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c656421",
                        "id": 2688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1669:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
                          "typeString": "literal_string \"Transfer failed!\""
                        },
                        "value": "Transfer failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
                          "typeString": "literal_string \"Transfer failed!\""
                        }
                      ],
                      "id": 2679,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1590:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1590:107:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2690,
                  "nodeType": "ExpressionStatement",
                  "src": "1590:107:8"
                }
              ]
            },
            "functionSelector": "172bd6de",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1189:5:8",
            "parameters": {
              "id": 2629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2621,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1203:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "1195:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1218:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "1210:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1210:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1234:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "1226:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "_proofs",
                  "nameLocation": "1258:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "1239:26:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2626,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1239:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 2627,
                    "nodeType": "ArrayTypeName",
                    "src": "1239:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1194:72:8"
            },
            "returnParameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:0:8"
            },
            "scope": 2762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2741,
            "nodeType": "FunctionDefinition",
            "src": "1729:348:8",
            "nodes": [],
            "body": {
              "id": 2740,
              "nodeType": "Block",
              "src": "1821:256:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2704,
                                "name": "isClaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2584,
                                "src": "1839:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$",
                                  "typeString": "mapping(address => mapping(address => mapping(uint256 => bool)))"
                                }
                              },
                              "id": 2707,
                              "indexExpression": {
                                "expression": {
                                  "id": 2705,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1849:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1853:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1849:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1839:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(uint256 => bool))"
                              }
                            },
                            "id": 2709,
                            "indexExpression": {
                              "id": 2708,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2694,
                              "src": "1861:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1839:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 2711,
                          "indexExpression": {
                            "id": 2710,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2698,
                            "src": "1869:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1839:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 2712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1877:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1839:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920636c61696d656421",
                        "id": 2714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1883:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b71a460a88560813dde520885f62fbdfb8f077fc6b93e7703d54cfd9ef8988e",
                          "typeString": "literal_string \"Already claimed!\""
                        },
                        "value": "Already claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b71a460a88560813dde520885f62fbdfb8f077fc6b93e7703d54cfd9ef8988e",
                          "typeString": "literal_string \"Already claimed!\""
                        }
                      ],
                      "id": 2703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1831:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1831:71:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "1831:71:8"
                },
                {
                  "expression": {
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 2717,
                            "name": "isClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2584,
                            "src": "1912:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(uint256 => bool)))"
                            }
                          },
                          "id": 2722,
                          "indexExpression": {
                            "expression": {
                              "id": 2718,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1922:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1926:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1922:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1912:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(uint256 => bool))"
                          }
                        },
                        "id": 2723,
                        "indexExpression": {
                          "id": 2720,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2694,
                          "src": "1934:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1912:29:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 2724,
                      "indexExpression": {
                        "id": 2721,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2698,
                        "src": "1942:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1912:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1949:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1912:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "1912:41:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2733,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2008:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2012:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2008:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2735,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2696,
                            "src": "2020:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2730,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2694,
                                "src": "1991:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2729,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 777,
                              "src": "1984:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$777_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1984:14:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$777",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1999:8:8",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 744,
                          "src": "1984:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1984:44:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c656421",
                        "id": 2737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2042:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
                          "typeString": "literal_string \"Transfer failed!\""
                        },
                        "value": "Transfer failed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90d55e62804d11a03706c4ba45c076d55b861de9e47cce0d0f470d817afc59ab",
                          "typeString": "literal_string \"Transfer failed!\""
                        }
                      ],
                      "id": 2728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1963:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:107:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2739,
                  "nodeType": "ExpressionStatement",
                  "src": "1963:107:8"
                }
              ]
            },
            "functionSelector": "b3f48f49",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2701,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2700,
                  "name": "checkGiveOutAddress",
                  "nameLocations": [
                    "1801:19:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2607,
                  "src": "1801:19:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1801:19:8"
              }
            ],
            "name": "sysTransfer",
            "nameLocation": "1738:11:8",
            "parameters": {
              "id": 2699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2694,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1758:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "1750:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2696,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1773:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "1765:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2698,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1789:3:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "1781:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1749:44:8"
            },
            "returnParameters": {
              "id": 2702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:0:8"
            },
            "scope": 2762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2753,
            "nodeType": "FunctionDefinition",
            "src": "2108:98:8",
            "nodes": [],
            "body": {
              "id": 2752,
              "nodeType": "Block",
              "src": "2167:39:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2748,
                      "name": "giveOutAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2586,
                      "src": "2177:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2749,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2743,
                      "src": "2194:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2177:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2751,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:22:8"
                }
              ]
            },
            "functionSelector": "7610fbe7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2746,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2745,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2157:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "2157:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2157:9:8"
              }
            ],
            "name": "setGiveOutAddress",
            "nameLocation": "2117:17:8",
            "parameters": {
              "id": 2744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "2143:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2753,
                  "src": "2135:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2135:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:15:8"
            },
            "returnParameters": {
              "id": 2747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2167:0:8"
            },
            "scope": 2762,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2761,
            "nodeType": "FunctionDefinition",
            "src": "2237:96:8",
            "nodes": [],
            "body": {
              "id": 2760,
              "nodeType": "Block",
              "src": "2295:38:8",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2758,
                    "name": "giveOutAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2586,
                    "src": "2312:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2757,
                  "id": 2759,
                  "nodeType": "Return",
                  "src": "2305:21:8"
                }
              ]
            },
            "functionSelector": "8c6e2e77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGiveOutAddress",
            "nameLocation": "2246:17:8",
            "parameters": {
              "id": 2754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2263:2:8"
            },
            "returnParameters": {
              "id": 2757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2756,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2761,
                  "src": "2286:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:9:8"
            },
            "scope": 2762,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2570,
              "name": "Ownable",
              "nameLocations": [
                "469:7:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "469:7:8"
            },
            "id": 2571,
            "nodeType": "InheritanceSpecifier",
            "src": "469:7:8"
          }
        ],
        "canonicalName": "Reward",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2762,
          112,
          824
        ],
        "name": "Reward",
        "nameLocation": "459:6:8",
        "scope": 2763,
        "usedErrors": [],
        "usedEvents": [
          13
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 8
}